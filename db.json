{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/vexo/source/fonts/SourceSansPro.ttf","path":"fonts/SourceSansPro.ttf","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/gitment.js","path":"js/gitment.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/qrious.js","path":"js/qrious.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/alipay.jpg","path":"css/images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/catalog.png","path":"css/images/catalog.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/error_icon.png","path":"css/images/error_icon.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/escheres.png","path":"css/images/escheres.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/java001.png","path":"css/images/java001.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/java003.png","path":"css/images/java003.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/logo.png","path":"css/images/logo.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/menu.png","path":"css/images/menu.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/top.png","path":"css/images/top.png","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/images/wechat.jpg","path":"css/images/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/vexo/source/css/plugins/gitment.css","path":"css/plugins/gitment.css","modified":1,"renderable":1},{"_id":"source/images/2021-10-03-spring002.png","path":"images/2021-10-03-spring002.png","modified":1,"renderable":0},{"_id":"source/images/1111.png","path":"images/1111.png","modified":1,"renderable":0},{"_id":"source/images/2021-10-03-spring001.png","path":"images/2021-10-03-spring001.png","modified":1,"renderable":0},{"_id":"source/images/2020-04-17-property-problem.png","path":"images/2020-04-17-property-problem.png","modified":1,"renderable":0},{"_id":"source/images/2021-10-03-spring003.png","path":"images/2021-10-03-spring003.png","modified":1,"renderable":0},{"_id":"source/images/2022-04-13-asciinema.png","path":"images/2022-04-13-asciinema.png","modified":1,"renderable":0},{"_id":"source/images/2022-04-17-component.png","path":"images/2022-04-17-component.png","modified":1,"renderable":0},{"_id":"source/images/2022-08-10-asyncComponent.png","path":"images/2022-08-10-asyncComponent.png","modified":1,"renderable":0},{"_id":"source/images/2022-08-10-junit.png","path":"images/2022-08-10-junit.png","modified":1,"renderable":0},{"_id":"source/images/2021-10-03-spring004.png","path":"images/2021-10-03-spring004.png","modified":1,"renderable":0},{"_id":"source/images/2022-08-10-autowired-null.png","path":"images/2022-08-10-autowired-null.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/first-spring-project.md","hash":"b2f26629c5109006162e8a889fa31d955bb5b101","modified":1650183570466},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1627356683000},{"_id":"source/.DS_Store","hash":"da21810fe5fe87c7d6d770ed3d1c57675251f2e6","modified":1650168104995},{"_id":"source/_posts/spring-unitTest-autowired.md","hash":"1da64ecb2f143a98c5cf8fcf3709e77b1fcad4ee","modified":1660116969888},{"_id":"source/_posts/setup-java-devlopment.md","hash":"63da78c4afa239a3e662bb45df9537b968be9473","modified":1650183561426},{"_id":"source/_posts/git-worktree-introduce.md","hash":"02615668dd679b931a2100455b767d6f5c9a72d5","modified":1649666759085},{"_id":"source/about/index.md","hash":"68c8af0453deca5f6b03eb18ee6f89fb0c1f1f75","modified":1627356819000},{"_id":"source/series/index.md","hash":"364b07ea1e0b28e792fc7bbddac0069c771dbefa","modified":1627356819000},{"_id":"source/_posts/property-can-not-found.md","hash":"6cb6abdc5aa680332ed09bbd4b6a626125befc9c","modified":1650183553042},{"_id":"source/project/index.md","hash":"b8f5482c157514bd2df4ce8a4e4d01a957497924","modified":1627356819000},{"_id":"source/tags/index.md","hash":"80a15f1b5daff22b04849109e976bc91a410b83e","modified":1627356819000},{"_id":"source/_posts/asciinema.md","hash":"0240ddaf6a55695e54b1ac81018a8d64176f2c9a","modified":1650183572956},{"_id":"source/images/2022-08-10-asyncComponent.png","hash":"a736ef76ecb7bcd53a4bec9ba286e6b30bb6fe5d","modified":1660116256769},{"_id":"source/images/1111.png","hash":"2371079f9bf13c75b3b5bb250aad7fdf5b98593b","modified":1650168131969},{"_id":"source/images/2022-04-17-component.png","hash":"25b4bc6510a81ccb270258bb6e46da55d1583e72","modified":1650167426138},{"_id":"source/images/2022-08-10-junit.png","hash":"d955c3589d7fb97e45c4dac9de5726e92a4af95b","modified":1660116347305},{"_id":"source/images/2021-10-03-spring002.png","hash":"52a8b816cd8ac1a77fff70ea6ae15f0deebc939b","modified":1633919756011},{"_id":"source/images/2022-08-10-autowired-null.png","hash":"c1c561091834fc4c63e3673a0f5a51f983c37abb","modified":1660116648103},{"_id":"source/images/2021-10-03-spring001.png","hash":"bd235a3072465814d00d5093931641350b2ba4bb","modified":1633919734919},{"_id":"source/images/2020-04-17-property-problem.png","hash":"c2e8c063b7bc8f4a2da10f9040ac08fb3d8cc6ff","modified":1650167152342},{"_id":"source/images/2022-04-13-asciinema.png","hash":"815f4ad0c75a880915ae65a39c4899570b2b16cc","modified":1649831196935},{"_id":"themes/vexo/.gitignore","hash":"37fb9fd49e7f944716efd3284a6bf55adb6dd0c2","modified":1627356809000},{"_id":"themes/vexo/.travis.yml","hash":"cc482f06f4ea6962058f2548dcb814b954876e76","modified":1627356809000},{"_id":"themes/vexo/_config.yml","hash":"51669cb8df5884e4ee2d88226ee23f19700df497","modified":1649833913361},{"_id":"themes/vexo/README.md","hash":"76d30348cde696a75dd4f50b0747c5e8e3779046","modified":1627356809000},{"_id":"themes/vexo/LICENSE","hash":"3e135cd69c0e02c0a49dd43d571f600223cc61d1","modified":1627356809000},{"_id":"themes/vexo/package.json","hash":"44e46ed458ca4351db2a773bb4c09ac814b7b1e0","modified":1627356809000},{"_id":"themes/vexo/layout/about.ejs","hash":"76ba7418788eb2bb9ba46844f4d750734847d0b4","modified":1627356809000},{"_id":"themes/vexo/layout/archive.ejs","hash":"f2480a73048bcb8673d78283090634d0857b80fb","modified":1627356809000},{"_id":"themes/vexo/layout/index.ejs","hash":"9f12f5928d68d4d68175b825e18f89f3b0dfdb69","modified":1627356809000},{"_id":"themes/vexo/layout/layout.ejs","hash":"a7b8f1debdca12d667ecd1bcc3d4bc6e13a23d7b","modified":1627356809000},{"_id":"themes/vexo/layout/project.ejs","hash":"a023b833a64006989c718c8d6125978a87fa2c3e","modified":1627356809000},{"_id":"themes/vexo/layout/page.ejs","hash":"c5a6f2f18b0cf664c7a34945ff46f83c81d6924c","modified":1627356809000},{"_id":"themes/vexo/layout/series.ejs","hash":"32010111ef27d2eefec44aba5a865064659d613a","modified":1627356809000},{"_id":"themes/vexo/_source/about/index.md","hash":"68c8af0453deca5f6b03eb18ee6f89fb0c1f1f75","modified":1627356809000},{"_id":"themes/vexo/_source/series/index.md","hash":"364b07ea1e0b28e792fc7bbddac0069c771dbefa","modified":1627356809000},{"_id":"themes/vexo/_source/project/index.md","hash":"b8f5482c157514bd2df4ce8a4e4d01a957497924","modified":1627356809000},{"_id":"themes/vexo/layout/_third-party/localsearch.ejs","hash":"fdf9e9f25b673c3f66694581cf5ebb578e5393b9","modified":1627356809000},{"_id":"themes/vexo/layout/_third-party/google_analytics.ejs","hash":"d09107a4ee5753a2fbbdb16ddf79d23ff0618c19","modified":1627356809000},{"_id":"themes/vexo/layout/_third-party/mathjax.ejs","hash":"aa58f0cfe22e7151c1a0521bbfa5cbd76f6dcd9d","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/archive.ejs","hash":"9abbf14034d581569c0b6c992fe22035cb5306b3","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/footer.ejs","hash":"6cf6b5ddb1c4c2e219fdb56ef0ab5c984bb4e7e9","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/header.ejs","hash":"8a3a4d5895330176e18bd6500b86b494c9246e7c","modified":1627356809000},{"_id":"themes/vexo/layout/tags.ejs","hash":"256413f3c6098eba42fce8f24319913e4b2512dc","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/pager.ejs","hash":"3a1b9680fbfa3baa76933c7c17216996381ad241","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/catalog.ejs","hash":"0352ce39c28074dcfc3bd6416680195eeb384fd1","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/top.ejs","hash":"f09dea486246a580213005b21d4b38810dd16fb3","modified":1627356809000},{"_id":"themes/vexo/lint.sh","hash":"f580302e4aa9ccfb95a253851da6501d145613fe","modified":1627356809000},{"_id":"themes/vexo/_source/tags/index.md","hash":"80a15f1b5daff22b04849109e976bc91a410b83e","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/head.ejs","hash":"01201764292a07d949a243687618694ee39989cb","modified":1649833498516},{"_id":"themes/vexo/layout/_partial/tag.ejs","hash":"5d2a2c3f8ca7000945ab426a0c6939421974b224","modified":1627356809000},{"_id":"themes/vexo/source/css/_config.styl","hash":"432ff0f2243eeb4ed1e05781942e28c25a8e66ed","modified":1627362161000},{"_id":"themes/vexo/source/css/style.styl","hash":"9dcd5509187654c29d0d908016a052fd164d257c","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/nav.ejs","hash":"3d8ddc1f6e135a240d40edd157cf37f5d0a12df6","modified":1627356809000},{"_id":"themes/vexo/source/js/script.js","hash":"1e0a395deba4f5ae66a5758590e094d26d777421","modified":1627356809000},{"_id":"themes/vexo/source/js/qrious.js","hash":"a9271e81e2ac6a692b1c133811afa33f0f3d7dc5","modified":1627356809000},{"_id":"themes/vexo/source/js/local-search.js","hash":"2d4c35e67f6ae2234a220c2898534d5bcb5245a2","modified":1627356809000},{"_id":"themes/vexo/source/css/.DS_Store","hash":"f26744f701eb766251e05e0b59346a63d329a472","modified":1649833448237},{"_id":"themes/vexo/source/css/_partial/catalog.styl","hash":"e3fd04eb0ae723def29592a0063e0706046cb6f2","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/categories.styl","hash":"d78cf86064428693e2173b4f23535cf311d18091","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/about.styl","hash":"1fc9572052194d94f86224a860e6b52435492e57","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/archive.styl","hash":"e80ddf26f2af3523632afeabd57f81592537985a","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/header.styl","hash":"6154d83977e8e725c52786b14a4d9b3bc62b1061","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/markdown.styl","hash":"2a1a99a0a8a9ffab1e64b7d7c9241ce8d5c84c39","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/nav.styl","hash":"e92c010c5cd460e75c67083df8cdd0bf4d25cde4","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/project.styl","hash":"e9b6faadf4852bce3a4141cba0a102a7afb81e9f","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/pager.styl","hash":"888384c67429c7568aa38b5ebe5acae3cc4de367","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/tags.styl","hash":"5198a7f7c221341138ae5c65185e86b6e13e8e26","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/search.styl","hash":"4fa3d5c7efd1de510719157bd7a6ab3c9f24e9fd","modified":1627356809000},{"_id":"themes/vexo/source/css/_partial/footer.styl","hash":"d90207a2b25e7a7a12b94cfcd5dde070422783e7","modified":1627356809000},{"_id":"themes/vexo/source/css/images/alipay.jpg","hash":"c49822ea6f06f868c2404fb00a93f913c8fff7b5","modified":1627356809000},{"_id":"themes/vexo/source/css/images/error_icon.png","hash":"efec6e759508dd02e6fa8c4facd9a25a61aae055","modified":1627356809000},{"_id":"themes/vexo/source/css/images/escheres.png","hash":"55deece3236dcc2fb44c28dec3e8bacbb7b46542","modified":1627356809000},{"_id":"themes/vexo/source/css/images/catalog.png","hash":"541d20dd600fc2c9230329ceb6885d86e6c151dd","modified":1627356809000},{"_id":"themes/vexo/source/css/images/java001.png","hash":"83dba45fdd20b26067169e1b90f53ec1e7249058","modified":1627361722000},{"_id":"themes/vexo/source/css/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1627356809000},{"_id":"themes/vexo/source/css/images/top.png","hash":"611a257907474ca02828319f81b006c1d818bb84","modified":1627356809000},{"_id":"themes/vexo/source/css/images/logo.png","hash":"718c6e48956249121cf3cca1a22a99f8372a3f0d","modified":1627356809000},{"_id":"themes/vexo/source/css/images/wechat.jpg","hash":"5bed6d3eb9f71b227b0ea0187c1a7ba8caf5ee64","modified":1627356809000},{"_id":"themes/vexo/source/css/plugins/gitment.css","hash":"541ff18d7f3542b5663dc6aad06d43e135332b71","modified":1627356809000},{"_id":"themes/vexo/source/css/images/java003.png","hash":"2e9935f4382686d55151c845c56d105f171fbaf3","modified":1627362136000},{"_id":"themes/vexo/layout/_partial/search/localsearch_button.ejs","hash":"3cb21e8d581ee998796f3f4bf9cd00abb9a67072","modified":1627356809000},{"_id":"themes/vexo/layout/_partial/search/localsearch_view.ejs","hash":"79e5e1a159d18b9e05961a47a4607b14be447e50","modified":1627356809000},{"_id":"themes/vexo/source/fonts/SourceSansPro.ttf","hash":"1e9f0372c269da205fdbac8cf27cb9cf59f6ad45","modified":1627356809000},{"_id":"themes/vexo/source/js/gitment.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1627356809000},{"_id":"source/images/2021-10-03-spring004.png","hash":"0d81af778244bcfb057410f8a47f68114e02e698","modified":1633919766102},{"_id":"source/images/2021-10-03-spring003.png","hash":"cf845e03eefa2f10c0b31bc798bd9443149e6c1e","modified":1633919760647},{"_id":"public/series/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660116974834},{"_id":"public/about/index.html","hash":"5112840aa051a39a5d61f18c9bbb255437dca1ea","modified":1660116974834},{"_id":"public/tags/index.html","hash":"eb63a8fbff85ff5cc41723e9ac60502a2dfbeb8a","modified":1660116974834},{"_id":"public/2022/04/17/property-can-not-found/index.html","hash":"f4bd70403aaa2c1f0fc75b5e38de2c78df52515d","modified":1660116974834},{"_id":"public/2022/04/13/asciinema/index.html","hash":"1c434353be77091a8022930a16b91da25729c185","modified":1660116974834},{"_id":"public/project/index.html","hash":"4ffe8a3d618a12df2e50f72c647efef3b26a3feb","modified":1660116974834},{"_id":"public/2022/04/11/git-worktree-introduce/index.html","hash":"2a02bf3e288251d8b01f0ca3bf0a8d4600e13f91","modified":1660116974834},{"_id":"public/2021/10/03/first-spring-project/index.html","hash":"75da951090a221687da5c2bcbccb93448b40da60","modified":1660116974834},{"_id":"public/2021/07/27/setup-java-devlopment/index.html","hash":"6ccde68c12529ad1f7910c4aff4489daf2f24fd9","modified":1660116974834},{"_id":"public/archives/index.html","hash":"923f716038725caf870be0d9eee46f4f0f694636","modified":1660116974834},{"_id":"public/archives/2021/index.html","hash":"f57588184d3fdef54cf284dd2e7ca4132eccd6f2","modified":1660116974834},{"_id":"public/archives/2021/07/index.html","hash":"9a78e9ff663f72c145ba5ae3f5602b63bfe8073c","modified":1660116974834},{"_id":"public/archives/2021/10/index.html","hash":"2f7e45055de71c09ccfcec9566daf62b39655e0d","modified":1660116974834},{"_id":"public/2021/07/27/hello-world/index.html","hash":"d53dc9dd89679e8f57dd838fe21c3aa2aa980c15","modified":1660116974834},{"_id":"public/archives/2022/04/index.html","hash":"e6fa1cc970c96456fa9aa82d6488979fe93fe8ed","modified":1660116974834},{"_id":"public/archives/2022/index.html","hash":"ffef7734b392bfa0bd3b823ba4d88efeeac34a5b","modified":1660116974834},{"_id":"public/archives/2022/08/index.html","hash":"b93557f9e845fc637288293639f5230ee420dedd","modified":1660116974834},{"_id":"public/tags/git/index.html","hash":"3b6b3d0e280bc20b60da880854ab70bae6b82c5f","modified":1660116974834},{"_id":"public/tags/java/index.html","hash":"065a1ce150c679568cf829377dec6cc4f9250365","modified":1660116974834},{"_id":"public/tags/spring/index.html","hash":"63213a48d6d728c08539b683d30082038a682a8d","modified":1660116974834},{"_id":"public/tags/problems/index.html","hash":"b4393e5e6d027f364f2c722cbbafe2d0c67ea469","modified":1660116974834},{"_id":"public/tags/JDK/index.html","hash":"ea58e0469d43ae546fb6e85f9d47c77fd24c6dfb","modified":1660116974834},{"_id":"public/tags/maven/index.html","hash":"44a0f5bdcc4fd05e94c97403de160fa8e86d0c65","modified":1660116974834},{"_id":"public/tags/autowired/index.html","hash":"09bb0e0b5bca760facd2ee30e4a963a66ee16b16","modified":1660116974834},{"_id":"public/tags/ascii/index.html","hash":"f595cbbc442781563e89d37cf926e6833068a735","modified":1660116974834},{"_id":"public/tags/terminal/index.html","hash":"a3492f07fc5beff48cf6602c1e2fc526f0ec9cc3","modified":1660116974834},{"_id":"public/2022/08/10/spring-unitTest-autowired/index.html","hash":"40f75eed10b05810a6dce0a1f99adffb786cf3c7","modified":1660116974834},{"_id":"public/tags/shell/index.html","hash":"0d8b9d5b5f1b1f50436c5f324efa1ed69916ce5a","modified":1660116974834},{"_id":"public/index.html","hash":"6281c2c4d387697263eeabe300f112e9e8cc833e","modified":1660116974834},{"_id":"public/css/images/alipay.jpg","hash":"c49822ea6f06f868c2404fb00a93f913c8fff7b5","modified":1660116974834},{"_id":"public/css/images/escheres.png","hash":"55deece3236dcc2fb44c28dec3e8bacbb7b46542","modified":1660116974834},{"_id":"public/css/images/java001.png","hash":"83dba45fdd20b26067169e1b90f53ec1e7249058","modified":1660116974834},{"_id":"public/css/images/error_icon.png","hash":"efec6e759508dd02e6fa8c4facd9a25a61aae055","modified":1660116974834},{"_id":"public/css/images/java003.png","hash":"2e9935f4382686d55151c845c56d105f171fbaf3","modified":1660116974834},{"_id":"public/css/images/logo.png","hash":"718c6e48956249121cf3cca1a22a99f8372a3f0d","modified":1660116974834},{"_id":"public/css/images/menu.png","hash":"bdaa35eb1ed119caeb934e15a05b9f4a5396d957","modified":1660116974834},{"_id":"public/css/images/top.png","hash":"611a257907474ca02828319f81b006c1d818bb84","modified":1660116974834},{"_id":"public/css/images/wechat.jpg","hash":"5bed6d3eb9f71b227b0ea0187c1a7ba8caf5ee64","modified":1660116974834},{"_id":"public/css/images/catalog.png","hash":"541d20dd600fc2c9230329ceb6885d86e6c151dd","modified":1660116974834},{"_id":"public/js/local-search.js","hash":"2d4c35e67f6ae2234a220c2898534d5bcb5245a2","modified":1660116974834},{"_id":"public/js/script.js","hash":"1e0a395deba4f5ae66a5758590e094d26d777421","modified":1660116974834},{"_id":"public/css/style.css","hash":"f585efca885de6aeb6b2075eb3ca9b908c0c2fef","modified":1660116974834},{"_id":"public/js/qrious.js","hash":"a9271e81e2ac6a692b1c133811afa33f0f3d7dc5","modified":1660116974834},{"_id":"public/css/plugins/gitment.css","hash":"541ff18d7f3542b5663dc6aad06d43e135332b71","modified":1660116974834},{"_id":"public/js/gitment.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1660116974834},{"_id":"public/fonts/SourceSansPro.ttf","hash":"1e9f0372c269da205fdbac8cf27cb9cf59f6ad45","modified":1660116974834},{"_id":"public/images/1111.png","hash":"2371079f9bf13c75b3b5bb250aad7fdf5b98593b","modified":1660116974834},{"_id":"public/images/2022-08-10-asyncComponent.png","hash":"a736ef76ecb7bcd53a4bec9ba286e6b30bb6fe5d","modified":1660116974834},{"_id":"public/images/2022-04-17-component.png","hash":"25b4bc6510a81ccb270258bb6e46da55d1583e72","modified":1660116974834},{"_id":"public/images/2021-10-03-spring002.png","hash":"52a8b816cd8ac1a77fff70ea6ae15f0deebc939b","modified":1660116974834},{"_id":"public/images/2020-04-17-property-problem.png","hash":"c2e8c063b7bc8f4a2da10f9040ac08fb3d8cc6ff","modified":1660116974834},{"_id":"public/images/2021-10-03-spring001.png","hash":"bd235a3072465814d00d5093931641350b2ba4bb","modified":1660116974834},{"_id":"public/images/2022-08-10-autowired-null.png","hash":"c1c561091834fc4c63e3673a0f5a51f983c37abb","modified":1660116974834},{"_id":"public/images/2022-08-10-junit.png","hash":"d955c3589d7fb97e45c4dac9de5726e92a4af95b","modified":1660116974834},{"_id":"public/images/2022-04-13-asciinema.png","hash":"815f4ad0c75a880915ae65a39c4899570b2b16cc","modified":1660116974834},{"_id":"public/images/2021-10-03-spring003.png","hash":"cf845e03eefa2f10c0b31bc798bd9443149e6c1e","modified":1660116974834},{"_id":"public/images/2021-10-03-spring004.png","hash":"0d81af778244bcfb057410f8a47f68114e02e698","modified":1660116974834}],"Category":[],"Data":[],"Page":[{"title":"Series","layout":"series","_content":"","source":"series/index.md","raw":"---\ntitle: Series\nlayout: series\n---\n","date":"2021-08-10T02:45:16.068Z","updated":"2021-07-27T03:33:39.000Z","path":"series/index.html","comments":1,"_id":"cl6nas7yt00002kuphfts7g8i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Project","layout":"project","_content":"","source":"project/index.md","raw":"---\ntitle: Project\nlayout: project\n---\n","date":"2021-08-10T02:45:16.068Z","updated":"2021-07-27T03:33:39.000Z","path":"project/index.html","comments":1,"_id":"cl6nas7yv00022kuph7kzf8yq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: About\nlayout: about\n---","date":"2021-08-10T02:45:16.068Z","updated":"2021-07-27T03:33:39.000Z","path":"about/index.html","comments":1,"_id":"cl6nas7yx00052kup2q451jy2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\nlayout: tags\n---\n","date":"2021-08-10T02:45:16.068Z","updated":"2021-07-27T03:33:39.000Z","path":"tags/index.html","comments":1,"_id":"cl6nas7yx00072kup6hmm3r7q","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"git worktree 介绍","date":"2022-04-11T07:54:00.000Z","banner":null,"_content":"\n### git worktree 使用场景\n\n如果我们正在feature开发一个新功能，这时候老板说线上有个bug，那么通俗的做法是用git stash保存当前代码，然后从mater拉出一个\nhotfix分支，修改提交后再切换到feature分支，用git stash pop恢复之前的代码。\n\n大部分时候可以这么做，但如果遇到大型项目，那么编辑器就会在你切换分支的时候来重新构建索引和设置，将会非常耗时。\n\n还有就是如果我们正在跑测试用例，不想半途而废再重新开始，这时候git stash就不那么灵光了。\n\ngit worktree可以在不中断我们任务和当前工程状态情况下帮助我们实现上述场景。\n\n### git worktree操作\n\n`git worktree add -b hotfix ../temp master` \n上述命令就是从当前项目弄出来一个全新的temp目录，并从master分支checkout出一个新的分支hotfix。\n\n后面我们就可以切换到temp目录 `cd ../temp` 用 `git status`查看你会发现这个是干干净净的目录，原来的目录仍然保持当前状态。\n\n在temp文件夹下开发完提交后，就可以切换到我们一开始的目录了。使用`git worktree remove temp`来移除temp副本，至此完成。\n\n\n### 参考\n\n[https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225](https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225)\n\n[https://www.gitkraken.com/learn/git/git-worktree](https://www.gitkraken.com/learn/git/git-worktree)\n\n[https://git-scm.com/docs/git-worktree](https://git-scm.com/docs/git-worktree)\n\n[https://dayarch.top/p/git-worktree-in-practice.html](https://dayarch.top/p/git-worktree-in-practice.html)\n\n","source":"_posts/git-worktree-introduce.md","raw":"---\ntitle: \"git worktree 介绍\"\ndate: 2022-04-11 15:54\nbanner:\ntags:\n  - git\n---\n\n### git worktree 使用场景\n\n如果我们正在feature开发一个新功能，这时候老板说线上有个bug，那么通俗的做法是用git stash保存当前代码，然后从mater拉出一个\nhotfix分支，修改提交后再切换到feature分支，用git stash pop恢复之前的代码。\n\n大部分时候可以这么做，但如果遇到大型项目，那么编辑器就会在你切换分支的时候来重新构建索引和设置，将会非常耗时。\n\n还有就是如果我们正在跑测试用例，不想半途而废再重新开始，这时候git stash就不那么灵光了。\n\ngit worktree可以在不中断我们任务和当前工程状态情况下帮助我们实现上述场景。\n\n### git worktree操作\n\n`git worktree add -b hotfix ../temp master` \n上述命令就是从当前项目弄出来一个全新的temp目录，并从master分支checkout出一个新的分支hotfix。\n\n后面我们就可以切换到temp目录 `cd ../temp` 用 `git status`查看你会发现这个是干干净净的目录，原来的目录仍然保持当前状态。\n\n在temp文件夹下开发完提交后，就可以切换到我们一开始的目录了。使用`git worktree remove temp`来移除temp副本，至此完成。\n\n\n### 参考\n\n[https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225](https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225)\n\n[https://www.gitkraken.com/learn/git/git-worktree](https://www.gitkraken.com/learn/git/git-worktree)\n\n[https://git-scm.com/docs/git-worktree](https://git-scm.com/docs/git-worktree)\n\n[https://dayarch.top/p/git-worktree-in-practice.html](https://dayarch.top/p/git-worktree-in-practice.html)\n\n","slug":"git-worktree-introduce","published":1,"updated":"2022-04-11T08:45:59.085Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7yu00012kup57c24oc4","content":"<h3 id=\"git-worktree-使用场景\"><a href=\"#git-worktree-使用场景\" class=\"headerlink\" title=\"git worktree 使用场景\"></a>git worktree 使用场景</h3><p>如果我们正在feature开发一个新功能，这时候老板说线上有个bug，那么通俗的做法是用git stash保存当前代码，然后从mater拉出一个<br>hotfix分支，修改提交后再切换到feature分支，用git stash pop恢复之前的代码。</p>\n<p>大部分时候可以这么做，但如果遇到大型项目，那么编辑器就会在你切换分支的时候来重新构建索引和设置，将会非常耗时。</p>\n<p>还有就是如果我们正在跑测试用例，不想半途而废再重新开始，这时候git stash就不那么灵光了。</p>\n<p>git worktree可以在不中断我们任务和当前工程状态情况下帮助我们实现上述场景。</p>\n<h3 id=\"git-worktree操作\"><a href=\"#git-worktree操作\" class=\"headerlink\" title=\"git worktree操作\"></a>git worktree操作</h3><p><code>git worktree add -b hotfix ../temp master</code><br>上述命令就是从当前项目弄出来一个全新的temp目录，并从master分支checkout出一个新的分支hotfix。</p>\n<p>后面我们就可以切换到temp目录 <code>cd ../temp</code> 用 <code>git status</code>查看你会发现这个是干干净净的目录，原来的目录仍然保持当前状态。</p>\n<p>在temp文件夹下开发完提交后，就可以切换到我们一开始的目录了。使用<code>git worktree remove temp</code>来移除temp副本，至此完成。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225\">https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225</a></p>\n<p><a href=\"https://www.gitkraken.com/learn/git/git-worktree\">https://www.gitkraken.com/learn/git/git-worktree</a></p>\n<p><a href=\"https://git-scm.com/docs/git-worktree\">https://git-scm.com/docs/git-worktree</a></p>\n<p><a href=\"https://dayarch.top/p/git-worktree-in-practice.html\">https://dayarch.top/p/git-worktree-in-practice.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"git-worktree-使用场景\"><a href=\"#git-worktree-使用场景\" class=\"headerlink\" title=\"git worktree 使用场景\"></a>git worktree 使用场景</h3><p>如果我们正在feature开发一个新功能，这时候老板说线上有个bug，那么通俗的做法是用git stash保存当前代码，然后从mater拉出一个<br>hotfix分支，修改提交后再切换到feature分支，用git stash pop恢复之前的代码。</p>\n<p>大部分时候可以这么做，但如果遇到大型项目，那么编辑器就会在你切换分支的时候来重新构建索引和设置，将会非常耗时。</p>\n<p>还有就是如果我们正在跑测试用例，不想半途而废再重新开始，这时候git stash就不那么灵光了。</p>\n<p>git worktree可以在不中断我们任务和当前工程状态情况下帮助我们实现上述场景。</p>\n<h3 id=\"git-worktree操作\"><a href=\"#git-worktree操作\" class=\"headerlink\" title=\"git worktree操作\"></a>git worktree操作</h3><p><code>git worktree add -b hotfix ../temp master</code><br>上述命令就是从当前项目弄出来一个全新的temp目录，并从master分支checkout出一个新的分支hotfix。</p>\n<p>后面我们就可以切换到temp目录 <code>cd ../temp</code> 用 <code>git status</code>查看你会发现这个是干干净净的目录，原来的目录仍然保持当前状态。</p>\n<p>在temp文件夹下开发完提交后，就可以切换到我们一开始的目录了。使用<code>git worktree remove temp</code>来移除temp副本，至此完成。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225\">https://stackoverflow.com/questions/31935776/what-would-i-use-git-worktree-for/31951225#31951225</a></p>\n<p><a href=\"https://www.gitkraken.com/learn/git/git-worktree\">https://www.gitkraken.com/learn/git/git-worktree</a></p>\n<p><a href=\"https://git-scm.com/docs/git-worktree\">https://git-scm.com/docs/git-worktree</a></p>\n<p><a href=\"https://dayarch.top/p/git-worktree-in-practice.html\">https://dayarch.top/p/git-worktree-in-practice.html</a></p>\n"},{"title":"Hello Spring","date":"2021-10-03T08:42:00.000Z","banner":null,"_content":"\n### Spring网站下载压缩包\n\n进入[https://start.spring.io/](https://start.spring.io/)网站，选择相关的配置, 然后下载就可以直接使用了。\n注意如果需要web开发，需要选择web插件，否则不会包含相应类库。\n\n如图所示\n\n![](/images/2021-10-03-spring001.png)\n\n用IDEA打开解压缩后的文件，即可自动下载相关类库。\n\n可在application.properties文件中修改相关配置，如修改端口号\n\n![](/images/2021-10-03-spring002.png)\n\n### 通过IDEA来创建Spring Project\n\n![](/images/2021-10-03-spring003.png)\n\n![](/images/2021-10-03-spring004.png)\n\n选择Spring Web即可。\n\n### 实现第一个Restful Hello World\n\n```java\npackage com.xuboso.demo3;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class Demo3Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Demo3Application.class, args);\n    }\n\n    @GetMapping(\"/hello\")\n    public String hello(@RequestParam(value = \"name\", defaultValue = \"kitty\") String name) {\n        return String.format(\"Hello %s\", name);\n    }\n\n}\n\n```\n\n","source":"_posts/first-spring-project.md","raw":"---\ntitle: \"Hello Spring\"\ndate: 2021-10-03 16:42\nbanner:\ntags:\n  - java\n  - spring\n---\n\n### Spring网站下载压缩包\n\n进入[https://start.spring.io/](https://start.spring.io/)网站，选择相关的配置, 然后下载就可以直接使用了。\n注意如果需要web开发，需要选择web插件，否则不会包含相应类库。\n\n如图所示\n\n![](/images/2021-10-03-spring001.png)\n\n用IDEA打开解压缩后的文件，即可自动下载相关类库。\n\n可在application.properties文件中修改相关配置，如修改端口号\n\n![](/images/2021-10-03-spring002.png)\n\n### 通过IDEA来创建Spring Project\n\n![](/images/2021-10-03-spring003.png)\n\n![](/images/2021-10-03-spring004.png)\n\n选择Spring Web即可。\n\n### 实现第一个Restful Hello World\n\n```java\npackage com.xuboso.demo3;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n@SpringBootApplication\n@RestController\npublic class Demo3Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Demo3Application.class, args);\n    }\n\n    @GetMapping(\"/hello\")\n    public String hello(@RequestParam(value = \"name\", defaultValue = \"kitty\") String name) {\n        return String.format(\"Hello %s\", name);\n    }\n\n}\n\n```\n\n","slug":"first-spring-project","published":1,"updated":"2022-04-17T08:19:30.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7yw00032kup5i5x6fiu","content":"<h3 id=\"Spring网站下载压缩包\"><a href=\"#Spring网站下载压缩包\" class=\"headerlink\" title=\"Spring网站下载压缩包\"></a>Spring网站下载压缩包</h3><p>进入<a href=\"https://start.spring.io/\">https://start.spring.io/</a>网站，选择相关的配置, 然后下载就可以直接使用了。<br>注意如果需要web开发，需要选择web插件，否则不会包含相应类库。</p>\n<p>如图所示</p>\n<p><img src=\"/images/2021-10-03-spring001.png\"></p>\n<p>用IDEA打开解压缩后的文件，即可自动下载相关类库。</p>\n<p>可在application.properties文件中修改相关配置，如修改端口号</p>\n<p><img src=\"/images/2021-10-03-spring002.png\"></p>\n<h3 id=\"通过IDEA来创建Spring-Project\"><a href=\"#通过IDEA来创建Spring-Project\" class=\"headerlink\" title=\"通过IDEA来创建Spring Project\"></a>通过IDEA来创建Spring Project</h3><p><img src=\"/images/2021-10-03-spring003.png\"></p>\n<p><img src=\"/images/2021-10-03-spring004.png\"></p>\n<p>选择Spring Web即可。</p>\n<h3 id=\"实现第一个Restful-Hello-World\"><a href=\"#实现第一个Restful-Hello-World\" class=\"headerlink\" title=\"实现第一个Restful Hello World\"></a>实现第一个Restful Hello World</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xuboso.demo3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(Demo3Application.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;kitty&quot;)</span> String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;Hello %s&quot;</span>, name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Spring网站下载压缩包\"><a href=\"#Spring网站下载压缩包\" class=\"headerlink\" title=\"Spring网站下载压缩包\"></a>Spring网站下载压缩包</h3><p>进入<a href=\"https://start.spring.io/\">https://start.spring.io/</a>网站，选择相关的配置, 然后下载就可以直接使用了。<br>注意如果需要web开发，需要选择web插件，否则不会包含相应类库。</p>\n<p>如图所示</p>\n<p><img src=\"/images/2021-10-03-spring001.png\"></p>\n<p>用IDEA打开解压缩后的文件，即可自动下载相关类库。</p>\n<p>可在application.properties文件中修改相关配置，如修改端口号</p>\n<p><img src=\"/images/2021-10-03-spring002.png\"></p>\n<h3 id=\"通过IDEA来创建Spring-Project\"><a href=\"#通过IDEA来创建Spring-Project\" class=\"headerlink\" title=\"通过IDEA来创建Spring Project\"></a>通过IDEA来创建Spring Project</h3><p><img src=\"/images/2021-10-03-spring003.png\"></p>\n<p><img src=\"/images/2021-10-03-spring004.png\"></p>\n<p>选择Spring Web即可。</p>\n<h3 id=\"实现第一个Restful-Hello-World\"><a href=\"#实现第一个Restful-Hello-World\" class=\"headerlink\" title=\"实现第一个Restful Hello World\"></a>实现第一个Restful Hello World</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.xuboso.demo3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(Demo3Application.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestParam(value = &quot;name&quot;, defaultValue = &quot;kitty&quot;)</span> String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;Hello %s&quot;</span>, name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-07-27T03:31:23.000Z","updated":"2021-07-27T03:31:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7yx00062kupg3op4woc","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"property-can-not-found错误","date":"2022-04-17T03:42:31.000Z","_content":"\n### java Properties  could not be found错误\n\n跟着spring tutorial学习的过程中，在学到上传文件 `https://spring.io/guides/gs/uploading-files/` 的时候按照原文代码编译报错了，错误如下\n\n```bash\nParameter 0 of constructor in com.example.uploadingfiles.storage.FileSystemStorageService required a bean of type 'com.example.uploadingfiles.storage.StorageProperties' that could not be found.\n```\n\n![](/images/2020-04-17-property-problem.png)\n\n大意是说定义的property没有找到，但是在入口不是使用了@SpringApplication注解吗，怎么会扫描不到呢，后来Google一番，发现说是被覆盖掉了，经过一番折腾终于解决了。\n\n解决办法就是需要在你的property添加`@Component`注解，这样就能被发现了。\n\n![](/images/2022-04-17-component.png)\n\n\n最开始的时候还遇到了这个报错 \n\n```bash\n@ConfigurationProperties Spring Boot Configuration Annotation Processor not found in classpath\n\n@ConfigurationProperties Spring Boot Configuration Annotation Processor not configured\n```\n\n解决办法是安装依赖 `spring-boot-configuration-processor` 更新pom.xml\n\n![](/images/2022-04-17-processor.png)\n\n\n### 参考\n\n[https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun](https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun)\n\n[https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html](https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html)\n\n[https://github.com/spring-projects/spring-boot/issues/19603](https://github.com/spring-projects/spring-boot/issues/19603)","source":"_posts/property-can-not-found.md","raw":"---\ntitle: property-can-not-found错误\ndate: 2022-04-17 11:42:31\ntags:\n  - java\n  - spring\n  - problems\n---\n\n### java Properties  could not be found错误\n\n跟着spring tutorial学习的过程中，在学到上传文件 `https://spring.io/guides/gs/uploading-files/` 的时候按照原文代码编译报错了，错误如下\n\n```bash\nParameter 0 of constructor in com.example.uploadingfiles.storage.FileSystemStorageService required a bean of type 'com.example.uploadingfiles.storage.StorageProperties' that could not be found.\n```\n\n![](/images/2020-04-17-property-problem.png)\n\n大意是说定义的property没有找到，但是在入口不是使用了@SpringApplication注解吗，怎么会扫描不到呢，后来Google一番，发现说是被覆盖掉了，经过一番折腾终于解决了。\n\n解决办法就是需要在你的property添加`@Component`注解，这样就能被发现了。\n\n![](/images/2022-04-17-component.png)\n\n\n最开始的时候还遇到了这个报错 \n\n```bash\n@ConfigurationProperties Spring Boot Configuration Annotation Processor not found in classpath\n\n@ConfigurationProperties Spring Boot Configuration Annotation Processor not configured\n```\n\n解决办法是安装依赖 `spring-boot-configuration-processor` 更新pom.xml\n\n![](/images/2022-04-17-processor.png)\n\n\n### 参考\n\n[https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun](https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun)\n\n[https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html](https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html)\n\n[https://github.com/spring-projects/spring-boot/issues/19603](https://github.com/spring-projects/spring-boot/issues/19603)","slug":"property-can-not-found","published":1,"updated":"2022-04-17T08:19:13.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7yx00082kup9tlfhtnp","content":"<h3 id=\"java-Properties-could-not-be-found错误\"><a href=\"#java-Properties-could-not-be-found错误\" class=\"headerlink\" title=\"java Properties  could not be found错误\"></a>java Properties  could not be found错误</h3><p>跟着spring tutorial学习的过程中，在学到上传文件 <code>https://spring.io/guides/gs/uploading-files/</code> 的时候按照原文代码编译报错了，错误如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter 0 of constructor <span class=\"keyword\">in</span> com.example.uploadingfiles.storage.FileSystemStorageService required a bean of <span class=\"built_in\">type</span> <span class=\"string\">&#x27;com.example.uploadingfiles.storage.StorageProperties&#x27;</span> that could not be found.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-04-17-property-problem.png\"></p>\n<p>大意是说定义的property没有找到，但是在入口不是使用了@SpringApplication注解吗，怎么会扫描不到呢，后来Google一番，发现说是被覆盖掉了，经过一番折腾终于解决了。</p>\n<p>解决办法就是需要在你的property添加<code>@Component</code>注解，这样就能被发现了。</p>\n<p><img src=\"/images/2022-04-17-component.png\"></p>\n<p>最开始的时候还遇到了这个报错 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ConfigurationProperties Spring Boot Configuration Annotation Processor not found <span class=\"keyword\">in</span> classpath</span><br><span class=\"line\"></span><br><span class=\"line\">@ConfigurationProperties Spring Boot Configuration Annotation Processor not configured</span><br></pre></td></tr></table></figure>\n\n<p>解决办法是安装依赖 <code>spring-boot-configuration-processor</code> 更新pom.xml</p>\n<p><img src=\"/images/2022-04-17-processor.png\"></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun\">https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun</a></p>\n<p><a href=\"https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html\">https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html</a></p>\n<p><a href=\"https://github.com/spring-projects/spring-boot/issues/19603\">https://github.com/spring-projects/spring-boot/issues/19603</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"java-Properties-could-not-be-found错误\"><a href=\"#java-Properties-could-not-be-found错误\" class=\"headerlink\" title=\"java Properties  could not be found错误\"></a>java Properties  could not be found错误</h3><p>跟着spring tutorial学习的过程中，在学到上传文件 <code>https://spring.io/guides/gs/uploading-files/</code> 的时候按照原文代码编译报错了，错误如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Parameter 0 of constructor <span class=\"keyword\">in</span> com.example.uploadingfiles.storage.FileSystemStorageService required a bean of <span class=\"built_in\">type</span> <span class=\"string\">&#x27;com.example.uploadingfiles.storage.StorageProperties&#x27;</span> that could not be found.</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/2020-04-17-property-problem.png\"></p>\n<p>大意是说定义的property没有找到，但是在入口不是使用了@SpringApplication注解吗，怎么会扫描不到呢，后来Google一番，发现说是被覆盖掉了，经过一番折腾终于解决了。</p>\n<p>解决办法就是需要在你的property添加<code>@Component</code>注解，这样就能被发现了。</p>\n<p><img src=\"/images/2022-04-17-component.png\"></p>\n<p>最开始的时候还遇到了这个报错 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@ConfigurationProperties Spring Boot Configuration Annotation Processor not found <span class=\"keyword\">in</span> classpath</span><br><span class=\"line\"></span><br><span class=\"line\">@ConfigurationProperties Spring Boot Configuration Annotation Processor not configured</span><br></pre></td></tr></table></figure>\n\n<p>解决办法是安装依赖 <code>spring-boot-configuration-processor</code> 更新pom.xml</p>\n<p><img src=\"/images/2022-04-17-processor.png\"></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun\">https://stackoverflow.com/questions/42839126/configurationproperties-spring-boot-configuration-annotation-processor-not-foun</a></p>\n<p><a href=\"https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html\">https://www.roseindia.net/answers/viewqa/Spring/265507-consider-defining-a-bean-of-type-in-your-configuration-spring-boot.html</a></p>\n<p><a href=\"https://github.com/spring-projects/spring-boot/issues/19603\">https://github.com/spring-projects/spring-boot/issues/19603</a></p>\n"},{"title":"搭建Java开发环境","date":"2021-07-27T03:35:00.000Z","banner":null,"_content":"\n### 1. 下载JDK并配置环境变量\n\n去oracle官网 [https://www.oracle.com/cn/java/technologies/javase-downloads.html](https://www.oracle.com/cn/java/technologies/javase-downloads.html)\n下载JDK， 选择 [Java SE 16](https://www.oracle.com/java/technologies/javase-jdk16-downloads.html), 然后选择对应的平台来下载。\n\n这里以macOS二进制为例，安装jdk后，需要配置相关Java环境变量\n\n```bash\nexport JAVA_HOME=$(/usr/libexec/java_home)\nexport CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n\n### 2. 下载Maven并配置环境变量\n\n去apache maven官网下载maven并解压缩 [https://maven.apache.org/download.cgi](https://maven.apache.org/download.cgi),  这里我解压缩并移动到`/usr/local`目录下。\n\n接下来就是配置maven环境变量\n\n```bash\nexport M2_HOME=/usr/local/apache-maven-3.8.1\nexport PATH=$PATH:$M2_HOME/bin\n```\n\n### 3. 下载编辑器IDEA\n\n去jetbrains官网[https://www.jetbrains.com/idea/download/#section=mac](https://www.jetbrains.com/idea/download/#section=mac) 下载M1版本。\n\n完成后可以安装无限试用插件, 点Preferences->Plugins->Manage Plugin Repositories添加仓库地址 `https://plugins.zhile.io/`， 然后搜索`IDE Eval Reset`插件进行安装。\n\n针对IDEA不能运行单个文件的问题，选择File->Project Structure->Modules中把你代码所在文件夹选为Sources然后确定。","source":"_posts/setup-java-devlopment.md","raw":"---\ntitle: \"搭建Java开发环境\"\ndate: 2021-07-27 11:35\nbanner:\ntags:\n  - java\n  - JDK\n  - maven\n---\n\n### 1. 下载JDK并配置环境变量\n\n去oracle官网 [https://www.oracle.com/cn/java/technologies/javase-downloads.html](https://www.oracle.com/cn/java/technologies/javase-downloads.html)\n下载JDK， 选择 [Java SE 16](https://www.oracle.com/java/technologies/javase-jdk16-downloads.html), 然后选择对应的平台来下载。\n\n这里以macOS二进制为例，安装jdk后，需要配置相关Java环境变量\n\n```bash\nexport JAVA_HOME=$(/usr/libexec/java_home)\nexport CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n\n### 2. 下载Maven并配置环境变量\n\n去apache maven官网下载maven并解压缩 [https://maven.apache.org/download.cgi](https://maven.apache.org/download.cgi),  这里我解压缩并移动到`/usr/local`目录下。\n\n接下来就是配置maven环境变量\n\n```bash\nexport M2_HOME=/usr/local/apache-maven-3.8.1\nexport PATH=$PATH:$M2_HOME/bin\n```\n\n### 3. 下载编辑器IDEA\n\n去jetbrains官网[https://www.jetbrains.com/idea/download/#section=mac](https://www.jetbrains.com/idea/download/#section=mac) 下载M1版本。\n\n完成后可以安装无限试用插件, 点Preferences->Plugins->Manage Plugin Repositories添加仓库地址 `https://plugins.zhile.io/`， 然后搜索`IDE Eval Reset`插件进行安装。\n\n针对IDEA不能运行单个文件的问题，选择File->Project Structure->Modules中把你代码所在文件夹选为Sources然后确定。","slug":"setup-java-devlopment","published":1,"updated":"2022-04-17T08:19:21.426Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7yy00092kup4jn83nt4","content":"<h3 id=\"1-下载JDK并配置环境变量\"><a href=\"#1-下载JDK并配置环境变量\" class=\"headerlink\" title=\"1. 下载JDK并配置环境变量\"></a>1. 下载JDK并配置环境变量</h3><p>去oracle官网 <a href=\"https://www.oracle.com/cn/java/technologies/javase-downloads.html\">https://www.oracle.com/cn/java/technologies/javase-downloads.html</a><br>下载JDK， 选择 <a href=\"https://www.oracle.com/java/technologies/javase-jdk16-downloads.html\">Java SE 16</a>, 然后选择对应的平台来下载。</p>\n<p>这里以macOS二进制为例，安装jdk后，需要配置相关Java环境变量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=$(/usr/libexec/java_home)</span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=<span class=\"variable\">$JAVA_HOME</span>/lib/tools.jar:<span class=\"variable\">$JAVA_HOME</span>/lib/dt.jar</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-下载Maven并配置环境变量\"><a href=\"#2-下载Maven并配置环境变量\" class=\"headerlink\" title=\"2. 下载Maven并配置环境变量\"></a>2. 下载Maven并配置环境变量</h3><p>去apache maven官网下载maven并解压缩 <a href=\"https://maven.apache.org/download.cgi\">https://maven.apache.org/download.cgi</a>,  这里我解压缩并移动到<code>/usr/local</code>目录下。</p>\n<p>接下来就是配置maven环境变量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> M2_HOME=/usr/<span class=\"built_in\">local</span>/apache-maven-3.8.1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$M2_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-下载编辑器IDEA\"><a href=\"#3-下载编辑器IDEA\" class=\"headerlink\" title=\"3. 下载编辑器IDEA\"></a>3. 下载编辑器IDEA</h3><p>去jetbrains官网<a href=\"https://www.jetbrains.com/idea/download/#section=mac\">https://www.jetbrains.com/idea/download/#section=mac</a> 下载M1版本。</p>\n<p>完成后可以安装无限试用插件, 点Preferences-&gt;Plugins-&gt;Manage Plugin Repositories添加仓库地址 <code>https://plugins.zhile.io/</code>， 然后搜索<code>IDE Eval Reset</code>插件进行安装。</p>\n<p>针对IDEA不能运行单个文件的问题，选择File-&gt;Project Structure-&gt;Modules中把你代码所在文件夹选为Sources然后确定。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-下载JDK并配置环境变量\"><a href=\"#1-下载JDK并配置环境变量\" class=\"headerlink\" title=\"1. 下载JDK并配置环境变量\"></a>1. 下载JDK并配置环境变量</h3><p>去oracle官网 <a href=\"https://www.oracle.com/cn/java/technologies/javase-downloads.html\">https://www.oracle.com/cn/java/technologies/javase-downloads.html</a><br>下载JDK， 选择 <a href=\"https://www.oracle.com/java/technologies/javase-jdk16-downloads.html\">Java SE 16</a>, 然后选择对应的平台来下载。</p>\n<p>这里以macOS二进制为例，安装jdk后，需要配置相关Java环境变量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=$(/usr/libexec/java_home)</span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=<span class=\"variable\">$JAVA_HOME</span>/lib/tools.jar:<span class=\"variable\">$JAVA_HOME</span>/lib/dt.jar</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-下载Maven并配置环境变量\"><a href=\"#2-下载Maven并配置环境变量\" class=\"headerlink\" title=\"2. 下载Maven并配置环境变量\"></a>2. 下载Maven并配置环境变量</h3><p>去apache maven官网下载maven并解压缩 <a href=\"https://maven.apache.org/download.cgi\">https://maven.apache.org/download.cgi</a>,  这里我解压缩并移动到<code>/usr/local</code>目录下。</p>\n<p>接下来就是配置maven环境变量</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> M2_HOME=/usr/<span class=\"built_in\">local</span>/apache-maven-3.8.1</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$M2_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-下载编辑器IDEA\"><a href=\"#3-下载编辑器IDEA\" class=\"headerlink\" title=\"3. 下载编辑器IDEA\"></a>3. 下载编辑器IDEA</h3><p>去jetbrains官网<a href=\"https://www.jetbrains.com/idea/download/#section=mac\">https://www.jetbrains.com/idea/download/#section=mac</a> 下载M1版本。</p>\n<p>完成后可以安装无限试用插件, 点Preferences-&gt;Plugins-&gt;Manage Plugin Repositories添加仓库地址 <code>https://plugins.zhile.io/</code>， 然后搜索<code>IDE Eval Reset</code>插件进行安装。</p>\n<p>针对IDEA不能运行单个文件的问题，选择File-&gt;Project Structure-&gt;Modules中把你代码所在文件夹选为Sources然后确定。</p>\n"},{"title":"spring autowired为null问题解决","date":"2022-08-10T07:21:53.000Z","_content":"\n### Spring Autowired无法自动装载问题\n\n如下代码在使用了`Component`和`Autowired`注解后仍然不能自动装载, 具体代码如下\n\n![](/images/2022-08-10-asyncComponent.png)\n\n![](/images/2022-08-10-junit.png)\n\n解决方法如下: 加上`@SpringBootTest`注解\n\n![](/images/2022-08-10-autowired-null.png)\n\n```java\npackage com.baeldung.async;\n\nimport com.baeldung.async.config.SpringAsyncConfig;\nimport org.junit.jupiter.api.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Configurable;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.support.AnnotationConfigContextLoader;\n\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.Future;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest\n@ContextConfiguration(classes = {SpringAsyncConfig.class}, loader = AnnotationConfigContextLoader.class)\npublic class AsyncAnnotationExampleIntegrationTest {\n\n    @Autowired\n    private AsyncComponent asyncAnnotationExample;\n\n    // tests\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithVoidReturnType() {\n        System.out.println(\"Start - invoking an asynchronous method. \" + Thread.currentThread().getName());\n        asyncAnnotationExample.asyncMethodWithVoidReturnType();\n        System.out.println(\"End - invoking an asynchronous method. \");\n    }\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithReturnType() throws InterruptedException, ExecutionException {\n        System.out.println(\"Start - invoking an asynchronous method. \" + Thread.currentThread().getName());\n        final Future<String> future = asyncAnnotationExample.asyncMethodWithReturnType();\n\n        while (true) {\n            if (future.isDone()) {\n                System.out.println(\"Result from asynchronous process - \" + future.get());\n                break;\n            }\n            System.out.println(\"Continue doing something else. \");\n            Thread.sleep(1000);\n        }\n    }\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithConfiguredExecutor() {\n        System.out.println(\"Start - invoking an asynchronous method . \");\n        asyncAnnotationExample.asyncMethodWithConfiguredExecutor();\n        System.out.println(\"End - invoking an asynchronous method. \");\n    }\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithException() throws Exception {\n        System.out.println(\"Start - invoking an asynchronous method. \");\n        asyncAnnotationExample.asyncMethodWithExceptions();\n        System.out.println(\"End - invoking an asynchronous method. \");\n    }\n}\n\n```\n\n### 参考\n\n[https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null](https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null)\n\n\n\n","source":"_posts/spring-unitTest-autowired.md","raw":"---\ntitle: spring autowired为null问题解决\ndate: 2022-08-10 15:21:53\ntags:\n - spring\n - autowired\n---\n\n### Spring Autowired无法自动装载问题\n\n如下代码在使用了`Component`和`Autowired`注解后仍然不能自动装载, 具体代码如下\n\n![](/images/2022-08-10-asyncComponent.png)\n\n![](/images/2022-08-10-junit.png)\n\n解决方法如下: 加上`@SpringBootTest`注解\n\n![](/images/2022-08-10-autowired-null.png)\n\n```java\npackage com.baeldung.async;\n\nimport com.baeldung.async.config.SpringAsyncConfig;\nimport org.junit.jupiter.api.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Configurable;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.support.AnnotationConfigContextLoader;\n\nimport java.util.concurrent.ExecutionException;\nimport java.util.concurrent.Future;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest\n@ContextConfiguration(classes = {SpringAsyncConfig.class}, loader = AnnotationConfigContextLoader.class)\npublic class AsyncAnnotationExampleIntegrationTest {\n\n    @Autowired\n    private AsyncComponent asyncAnnotationExample;\n\n    // tests\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithVoidReturnType() {\n        System.out.println(\"Start - invoking an asynchronous method. \" + Thread.currentThread().getName());\n        asyncAnnotationExample.asyncMethodWithVoidReturnType();\n        System.out.println(\"End - invoking an asynchronous method. \");\n    }\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithReturnType() throws InterruptedException, ExecutionException {\n        System.out.println(\"Start - invoking an asynchronous method. \" + Thread.currentThread().getName());\n        final Future<String> future = asyncAnnotationExample.asyncMethodWithReturnType();\n\n        while (true) {\n            if (future.isDone()) {\n                System.out.println(\"Result from asynchronous process - \" + future.get());\n                break;\n            }\n            System.out.println(\"Continue doing something else. \");\n            Thread.sleep(1000);\n        }\n    }\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithConfiguredExecutor() {\n        System.out.println(\"Start - invoking an asynchronous method . \");\n        asyncAnnotationExample.asyncMethodWithConfiguredExecutor();\n        System.out.println(\"End - invoking an asynchronous method. \");\n    }\n\n    @Test\n    public void testAsyncAnnotationForMethodsWithException() throws Exception {\n        System.out.println(\"Start - invoking an asynchronous method. \");\n        asyncAnnotationExample.asyncMethodWithExceptions();\n        System.out.println(\"End - invoking an asynchronous method. \");\n    }\n}\n\n```\n\n### 参考\n\n[https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null](https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null)\n\n\n\n","slug":"spring-unitTest-autowired","published":1,"updated":"2022-08-10T07:36:09.888Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7z0000r2kup61nk7dja","content":"<h3 id=\"Spring-Autowired无法自动装载问题\"><a href=\"#Spring-Autowired无法自动装载问题\" class=\"headerlink\" title=\"Spring Autowired无法自动装载问题\"></a>Spring Autowired无法自动装载问题</h3><p>如下代码在使用了<code>Component</code>和<code>Autowired</code>注解后仍然不能自动装载, 具体代码如下</p>\n<p><img src=\"/images/2022-08-10-asyncComponent.png\"></p>\n<p><img src=\"/images/2022-08-10-junit.png\"></p>\n<p>解决方法如下: 加上<code>@SpringBootTest</code>注解</p>\n<p><img src=\"/images/2022-08-10-autowired-null.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.baeldung.async;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baeldung.async.config.SpringAsyncConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Configurable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.support.AnnotationConfigContextLoader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutionException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Future;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration(classes = &#123;SpringAsyncConfig.class&#125;, loader = AnnotationConfigContextLoader.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AsyncAnnotationExampleIntegrationTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AsyncComponent asyncAnnotationExample;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// tests</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithVoidReturnType</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method. &quot;</span> + Thread.currentThread().getName());</span><br><span class=\"line\">        asyncAnnotationExample.asyncMethodWithVoidReturnType();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;End - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithReturnType</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException, ExecutionException </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method. &quot;</span> + Thread.currentThread().getName());</span><br><span class=\"line\">        <span class=\"keyword\">final</span> Future&lt;String&gt; future = asyncAnnotationExample.asyncMethodWithReturnType();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (future.isDone()) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Result from asynchronous process - &quot;</span> + future.get());</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Continue doing something else. &quot;</span>);</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithConfiguredExecutor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method . &quot;</span>);</span><br><span class=\"line\">        asyncAnnotationExample.asyncMethodWithConfiguredExecutor();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;End - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithException</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">        asyncAnnotationExample.asyncMethodWithExceptions();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;End - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null\">https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Spring-Autowired无法自动装载问题\"><a href=\"#Spring-Autowired无法自动装载问题\" class=\"headerlink\" title=\"Spring Autowired无法自动装载问题\"></a>Spring Autowired无法自动装载问题</h3><p>如下代码在使用了<code>Component</code>和<code>Autowired</code>注解后仍然不能自动装载, 具体代码如下</p>\n<p><img src=\"/images/2022-08-10-asyncComponent.png\"></p>\n<p><img src=\"/images/2022-08-10-junit.png\"></p>\n<p>解决方法如下: 加上<code>@SpringBootTest</code>注解</p>\n<p><img src=\"/images/2022-08-10-autowired-null.png\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.baeldung.async;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baeldung.async.config.SpringAsyncConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Configurable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.support.AnnotationConfigContextLoader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ExecutionException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.Future;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration(classes = &#123;SpringAsyncConfig.class&#125;, loader = AnnotationConfigContextLoader.class)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AsyncAnnotationExampleIntegrationTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AsyncComponent asyncAnnotationExample;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// tests</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithVoidReturnType</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method. &quot;</span> + Thread.currentThread().getName());</span><br><span class=\"line\">        asyncAnnotationExample.asyncMethodWithVoidReturnType();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;End - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithReturnType</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException, ExecutionException </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method. &quot;</span> + Thread.currentThread().getName());</span><br><span class=\"line\">        <span class=\"keyword\">final</span> Future&lt;String&gt; future = asyncAnnotationExample.asyncMethodWithReturnType();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (future.isDone()) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;Result from asynchronous process - &quot;</span> + future.get());</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Continue doing something else. &quot;</span>);</span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">1000</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithConfiguredExecutor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method . &quot;</span>);</span><br><span class=\"line\">        asyncAnnotationExample.asyncMethodWithConfiguredExecutor();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;End - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testAsyncAnnotationForMethodsWithException</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Start - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">        asyncAnnotationExample.asyncMethodWithExceptions();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;End - invoking an asynchronous method. &quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null\">https://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null</a></p>\n"},{"title":"asciinema 终端录制","date":"2022-04-13T06:06:00.000Z","banner":null,"_content":"\n### asciinema\n\nascii是一个终端录制程序，可以将自己的终端操作录制后分享给他人。\n\n安装asciinema\n\n```bash\nbrew install asciinema\n```\n\n开始屏幕录制\n\n```bash\nasciinema rec\n```\n\n操作完毕后可以按提示`<ctrl-d>`或者`exit`退出录制。退出后根据提示按`<enter>`就可以上传到asciinema.org官网了，没有注册账户的话默认保存7天。\n\n![](/images/2022-04-13-asciinema.png)\n\n示例: [https://asciinema.org/a/486676](https://asciinema.org/a/486676)\n\n","source":"_posts/asciinema.md","raw":"---\ntitle: \"asciinema 终端录制\"\ndate: 2022-04-13 14:06\nbanner:\ntags:\n  - ascii\n  - terminal\n  - shell\n---\n\n### asciinema\n\nascii是一个终端录制程序，可以将自己的终端操作录制后分享给他人。\n\n安装asciinema\n\n```bash\nbrew install asciinema\n```\n\n开始屏幕录制\n\n```bash\nasciinema rec\n```\n\n操作完毕后可以按提示`<ctrl-d>`或者`exit`退出录制。退出后根据提示按`<enter>`就可以上传到asciinema.org官网了，没有注册账户的话默认保存7天。\n\n![](/images/2022-04-13-asciinema.png)\n\n示例: [https://asciinema.org/a/486676](https://asciinema.org/a/486676)\n\n","slug":"asciinema","published":1,"updated":"2022-04-17T08:19:32.956Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6nas7z1000v2kupe9qyebr1","content":"<h3 id=\"asciinema\"><a href=\"#asciinema\" class=\"headerlink\" title=\"asciinema\"></a>asciinema</h3><p>ascii是一个终端录制程序，可以将自己的终端操作录制后分享给他人。</p>\n<p>安装asciinema</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install asciinema</span><br></pre></td></tr></table></figure>\n\n<p>开始屏幕录制</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">asciinema rec</span><br></pre></td></tr></table></figure>\n\n<p>操作完毕后可以按提示<code>&lt;ctrl-d&gt;</code>或者<code>exit</code>退出录制。退出后根据提示按<code>&lt;enter&gt;</code>就可以上传到asciinema.org官网了，没有注册账户的话默认保存7天。</p>\n<p><img src=\"/images/2022-04-13-asciinema.png\"></p>\n<p>示例: <a href=\"https://asciinema.org/a/486676\">https://asciinema.org/a/486676</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"asciinema\"><a href=\"#asciinema\" class=\"headerlink\" title=\"asciinema\"></a>asciinema</h3><p>ascii是一个终端录制程序，可以将自己的终端操作录制后分享给他人。</p>\n<p>安装asciinema</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install asciinema</span><br></pre></td></tr></table></figure>\n\n<p>开始屏幕录制</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">asciinema rec</span><br></pre></td></tr></table></figure>\n\n<p>操作完毕后可以按提示<code>&lt;ctrl-d&gt;</code>或者<code>exit</code>退出录制。退出后根据提示按<code>&lt;enter&gt;</code>就可以上传到asciinema.org官网了，没有注册账户的话默认保存7天。</p>\n<p><img src=\"/images/2022-04-13-asciinema.png\"></p>\n<p>示例: <a href=\"https://asciinema.org/a/486676\">https://asciinema.org/a/486676</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl6nas7yu00012kup57c24oc4","tag_id":"cl6nas7yw00042kup12ingjzf","_id":"cl6nas7yy000b2kup0ug0evca"},{"post_id":"cl6nas7yw00032kup5i5x6fiu","tag_id":"cl6nas7yy000a2kup8x19hduj","_id":"cl6nas7yz000e2kup9242dtl4"},{"post_id":"cl6nas7yw00032kup5i5x6fiu","tag_id":"cl6nas7yy000c2kup5neyfxbe","_id":"cl6nas7yz000f2kup79skgj2h"},{"post_id":"cl6nas7yx00082kup9tlfhtnp","tag_id":"cl6nas7yy000a2kup8x19hduj","_id":"cl6nas7yz000j2kup2xwe91e0"},{"post_id":"cl6nas7yx00082kup9tlfhtnp","tag_id":"cl6nas7yy000c2kup5neyfxbe","_id":"cl6nas7yz000k2kupa7rw4gk5"},{"post_id":"cl6nas7yx00082kup9tlfhtnp","tag_id":"cl6nas7yz000h2kupek0f3yhv","_id":"cl6nas7yz000m2kup9jfhbmvc"},{"post_id":"cl6nas7yy00092kup4jn83nt4","tag_id":"cl6nas7yy000a2kup8x19hduj","_id":"cl6nas7z0000o2kup5e7c9y6f"},{"post_id":"cl6nas7yy00092kup4jn83nt4","tag_id":"cl6nas7yz000l2kup1ozdblks","_id":"cl6nas7z0000p2kup6ndef603"},{"post_id":"cl6nas7yy00092kup4jn83nt4","tag_id":"cl6nas7z0000n2kup3ao5c9yb","_id":"cl6nas7z0000q2kupazq97mti"},{"post_id":"cl6nas7z0000r2kup61nk7dja","tag_id":"cl6nas7yy000c2kup5neyfxbe","_id":"cl6nas7z0000t2kup3iae61nm"},{"post_id":"cl6nas7z0000r2kup61nk7dja","tag_id":"cl6nas7z0000s2kup20j98ixg","_id":"cl6nas7z0000u2kuphhb73s6z"},{"post_id":"cl6nas7z1000v2kupe9qyebr1","tag_id":"cl6nas7z1000w2kupga4461gm","_id":"cl6nas7z1000z2kup9o6u7dlb"},{"post_id":"cl6nas7z1000v2kupe9qyebr1","tag_id":"cl6nas7z1000x2kupb2kzct7m","_id":"cl6nas7z100102kupellu81ut"},{"post_id":"cl6nas7z1000v2kupe9qyebr1","tag_id":"cl6nas7z1000y2kup880xegze","_id":"cl6nas7z100112kup1dzj0pwt"}],"Tag":[{"name":"git","_id":"cl6nas7yw00042kup12ingjzf"},{"name":"java","_id":"cl6nas7yy000a2kup8x19hduj"},{"name":"spring","_id":"cl6nas7yy000c2kup5neyfxbe"},{"name":"problems","_id":"cl6nas7yz000h2kupek0f3yhv"},{"name":"JDK","_id":"cl6nas7yz000l2kup1ozdblks"},{"name":"maven","_id":"cl6nas7z0000n2kup3ao5c9yb"},{"name":"autowired","_id":"cl6nas7z0000s2kup20j98ixg"},{"name":"ascii","_id":"cl6nas7z1000w2kupga4461gm"},{"name":"terminal","_id":"cl6nas7z1000x2kupb2kzct7m"},{"name":"shell","_id":"cl6nas7z1000y2kup880xegze"}]}}